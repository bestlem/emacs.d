#+TITLE Emacs configuration where no .el is in got
#+PROPERTY:header-args :cache yes :tangle yes :comments link
#+STARTUP: content
* Init environment
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:714AABB4-0858-48B3-BFDB-0F9D17A40C40
:END:
The minimum setup needed to load the rest.
** Emacs Lisp
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:802F10D5-7A50-432F-99F2-F1D27EB3525D
:END:
*** Debugging
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:62080F1E-8D8F-4EBB-8ACE-9C2D6DCA14A9
:END:
	  This slows things down so for debugging outside init. but I now don't like Backtrace mainly as trying to use emacs not edit it.
	  But for debugging init we don't want the backtrace

      #+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_B6CC1317-E222-4867-9C34-C0396275139E
      #+begin_src emacs-lisp
;;  setting to nil turns them off
(add-hook 'after-init-hook
          (lambda () (setq debug-on-error nil)))
(setq debug-on-error nil)
(setq debug-on-quit nil)

;; Trace some function
;; (require 'trace)
;; (untrace-all)
;; (trace-function-foreground 'iso-transl-define-keys)


(with-eval-after-load 'iso-transl
  (warning "loading \"iso-trransl\"")
  (dolist (transl-char iso-transl-char-map)
    (let ((vec (vconcat (car transl-char))))
      (aset vec 0 (logior (aref vec 0) ?\A-\^@))
      (define-key key-translation-map vec nil))))
     #+end_src
**** Message
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:3247611A-A6FB-40F6-9BB1-7B0772C213DE
:END:
	 Show message with timestamp - commented out
     #+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_6AF865AB-787D-4082-BE2B-6702BA26B4E2
     #+begin_src emacs-lisp :tangle no
(defun my-message-with-timestamp (old-func fmt-string &rest args)
       "Prepend current timestamp (with microsecond precision) to a message"
       (apply old-func
              (concat (format-time-string "[%F %T.%3N %Z] ")
                      fmt-string)
              args))
     (advice-add 'message :around #'my-message-with-timestamp)

     (defun mwb-message-remove-timestanp ()
       (interactive)
       (advice-remove 'message #'my-message-with-timestamp)
       (message "remove timestamp"))

     (add-hook 'after-init-hook 'mwb-message-remove-timestanp)
      #+end_src
*** Use source where newer
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:D13FB268-3059-4AEC-9A25-50AD765F26C5
:END:
 This variable tells Emacs to prefer the .el file if itâ€™s newer, even if there is a corresponding .elc file.
	  #+begin_src emacs-lisp
(setq load-prefer-newer t)
	  #+end_src

** Various constants
:PROPERTIES:
:ID:       org_mark_2020-02-20T21-36-43+00-00_mini12.local:EC43B9AE-44B4-4FBB-9E63-AC26BB45592E
:END:

*** TODO Memory
:PROPERTIES:
:ID:       org_mark_2020-09-29T11-53-58+01-00_mini12.local:9D47A2C9-7038-4697-BFA4-92B1DA6CF5B1
:END:
Fiddling in org-all - perhaps best to remove
#+NAME: org_mark_2020-09-29T11-53-58+01-00_mini12.local_7D9953DD-3F51-4877-A56E-8FC6AB539FF7
#+begin_src emacs-lisp
(setq mwb/gc-cons-threshold 800000)
#+end_src

*** Emacs versions
:PROPERTIES:
:ID:       org_mark_2020-09-29T11-53-58+01-00_mini12.local:433ED4F4-38B0-44D9-8067-0EF36DB709FB
:END:
What type of Emacs and system do we have
#+NAME: org_mark_2020-09-29T11-53-58+01-00_mini12.local_4D64DDBE-8A53-4B07-8BD4-39512F444777
#+begin_src emacs-lisp
(defconst *aquamacs* (featurep 'aquamacs)
  "True iff we are in aquamacs")
(defconst *macport* (boundp 'mac-carbon-version-string)
  "True iff we are in Mitsuharu Yamamoto's port")
#+end_src
** Packaging
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:9ACB4F21-BFAB-4D2F-A271-1D8D9B9625FB
:END:
Loading other code. Using emacs internal packagemenager and use-package.

This file does too much for error trapping and needs. We only need the SSL, package manager and use-package and the rest can go after org mode.
But this is working so don;t need to chnage until an actual bug + my org-mode setup is the most complex bit. So these extra things go before org-all.
**** SSL  network connection
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:836EC728-DBED-4BB7-BC7C-6F39951A32BE
:END:
 Basically we need gnutls to connect via SSL as certificates have changed
 From https://github.com/paolodedios/dot-files/blob/1a7b4500c8ce07d0d473dbf714a2303f4d440ef5/.emacs.d/init.el
 Configure GnuTLS

 GnuTLS requires additional configuration on Emacs 25+ on macOS to prevent it
 from crashing when loading package repositories.

 @see https://github.com/davidswelt/aquamacs-emacs/issues/133
 @see https://github.com/davidswelt/aquamacs-emacs/issues/149
 @see https://www.reddit.com/r/emacs/comments/8sykl1/emacs_tls_defaults_are_downright_dangerous/
 @see https://www.gnu.org/software/emacs/manual/html_node/emacs-gnutls/Help-For-Users.html

  @note starttls.el and tls.el have been moved to obsolete in the master branch
  (what will be Emacs 27).
  To work with Emacs 27 package is in early-init.el This section is aquamacs specific although if that is upgraded need a better test
	 #+begin_src emacs-lisp
(when *aquamacs*
  (require 'tls)

  (with-eval-after-load 'tls
    ;; Add the gnutls CA certificate file
    (push "/private/etc/ssl/cert.pem"                gnutls-trustfiles)
    ;; Add the curl CA certificate file from Macports
    (push "/opt/local/share/curl/curl-ca-bundle.crt" gnutls-trustfiles)
    )

  ;; Validate TLS certificates
  (setq gnutls-verify-error           t)

  ;; Increase prime bits on TLS keys
  (setq gnutls-min-prime-bits      2048)

  ;; Network Security Module settings
  ;; https://www.gnu.org/software/emacs/manual/html_node/emacs/Network-Security.html
  (setq network-security-level  'medium)
  (setq nsm-save-host-names           t)

  ;; Set tls-checktrust to `'ask` instead of `t` to allow user to determine
  ;; whether or not to trust a certificate.
  (setq tls-checktrust             'ask)

  ;; mwb hacks
  (setq gnutls-algorithm-priority "NORMAL:-VERS-TLS1.3")

  ;; Update the tls-program invocation command line string
  ;;
  ;; Add `--priority` flag to  prevents the 3des certificate from being used.
  ;; Add `:%%PROFILE_MEDIUM` to ban intermediate SHA1 certificates.
  ;; Add `--ocsp` flag to require certificate revocation check
  ;;
  ;; Add `--insecure` flag as a temporary workaround for the expired certificate
  ;; on marmalade.org from hanging Aquamacs.
  (setq tls-program
        '("gnutls-cli -p %p --dh-bits=2048 --ocsp --x509cafile=%t --insecure \
	 --priority='SECURE192:+SECURE128:-VERS-ALL:+VERS-TLS1.2:%%PROFILE_MEDIUM' %h")))
	 #+end_src
**** Package Manager
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:1FAA7B31-FA5B-4485-B186-B85EDF3E5426
:END:
	  Initialize packages immediately and not after init.el is read post startup
	  Note that Aquuamacs set these repositories.
	  Don't need package-initialize as use package does it all? per https://www.youtube.com/watch?v=2TSKxxYEbII but see this [[https://emacs.stackexchange.com/a/16832/9874][Emacs SE]] saying you might want to add a t parameter to that but then takes little tome so just put it in.
      This needs altering for Emacs 27 some go to early init others here.
	   #+begin_src emacs-lisp
(require 'package)
(if (< emacs-major-version 27)
    (setq package-enable-at-startup nil)
  (setq package-quickstart nil))

;; common code
;;  package-archives is an assoc so dups don't matter just look at the front
(setq package-archives '())
(add-to-list 'package-archives '("gnu" . "https://elpa.gnu.org/packages/"))
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
(package-initialize)
	   #+end_src


** Macros to set up how modes are set up
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:A3665416-954F-4BD9-B55F-86949CFA7719
:END:
Basically use-package and helpers - strictly some of these can be left to later.
*** use-package
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:3D4EAA9E-BE50-474E-8111-F20ACA6A1703
:END:
 include use-package setup from <https://github.com/CachesToCaches/getting_started_with_use_package/blob/master/init-use-package.el>
 #+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_77FB1165-1A41-4244-818F-7BFAF0F191FB
 #+begin_src emacs-lisp
 (unless (package-installed-p 'use-package)
   (package-refresh-contents)
   (package-install 'use-package))

 ;; Enable use-package
 (eval-when-compile
   (require 'use-package)
   (if init-file-debug
       (setq use-package-verbose t
             use-package-expand-minimally nil
             use-package-compute-statistics t
             )
     (setq use-package-verbose nil
           use-package-expand-minimally t
           bind-key-describe-special-forms t)))
 #+end_src
Override bind-keys othat
*** Extras needed for loading
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:8EEFB5D5-EB93-442F-8ECA-CB62A943A310
:END:
 These are used in the use-package macro
**** Diminish
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:960EBB57-7FC4-47DB-81FE-C0A425520C00
:END:
 Mark if the mode being setup should not show in the mode/status line.
  #+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_B22D3C47-20C6-4BA0-8F8A-9B7618FF2171
  #+begin_src emacs-lisp
  (use-package diminish   :ensure t   :demand t)
  #+end_src

**** Emacs lisp additions
:PROPERTIES:
:ID:       org_mark_2020-11-05T13-04-24+00-00_mini12.local:8B285FB0-8B33-4187-AC49-3CDC90FCCA9B
:END:
These are needed as might be in my code
***** Dash
:PROPERTIES:
:ID:       org_mark_2020-11-05T13-04-24+00-00_mini12.local:E429BF67-CB7F-4368-AC12-9B7F50F264DB
:END:
Functional programming
#+NAME: org_mark_2020-11-05T13-04-24+00-00_mini12.local_586F9C8C-30DC-441E-85EE-1A67DA609030
#+begin_src emacs-lisp
(use-package dash
  :config
  (dash-enable-font-lock))
#+end_src
***** Rx
:PROPERTIES:
:ID:       org_mark_2020-11-05T13-04-24+00-00_mini12.local:67FA0648-E483-44F4-91B6-0A44F2D09008
:END:
Convert a set of function calls to an RE. (it is part of emacs.
#+NAME: org_mark_2020-11-05T13-04-24+00-00_mini12.local_B657936A-CBB7-4CE2-8BD9-8B2216C68A90
#+BEGIN_SRC emacs-lisp
(use-package rx)
#+END_SRC

**** Elisp code
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:8A9FE4DD-E2ED-4457-B819-F32FF65A28A9
:END:
Need to alter list
#+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_F280AA26-0D29-4282-8182-17F8DAA8A297
#+begin_src emacs-lisp
(defun mwb-insert-before-element (find-element new-element list)
  "Find FIND-ELEMENT and then insert NEW-ELEMENT before it in LIST."
  (let ((i (-elem-index find-element list)))
    (-insert-at i new-element list)))
#+end_src

**** Key chords
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:EFE2E658-C575-4F10-BEEA-60B7FA5D9A7A
:END:
#+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_38580E30-B5CF-45B3-850B-07E27178252F
#+begin_src emacs-lisp
(use-package use-package-chords
  :ensure t
  :config (key-chord-mode 1))
#+end_src
**** Add load path
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:25E6B29E-1FD7-4FB8-BA7C-5546A45CFA00
:END:
The code is relative to this file and not user-emacs-directory
So add :mwb-load-path as a new key to use-package
Note that this is making the addition explicit so for example the aquamacs path does not get added in Aquamacs.
#+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_A19E700E-BA25-4246-8752-B775A2177D5D
#+begin_src emacs-lisp
(defun use-package-normalize-mwb-paths (label arg &optional recursed)
  "Normalize a list of filesystem paths."
  (cond
   ((and arg (or (use-package-non-nil-symbolp arg) (functionp arg)))
    (let ((value (use-package-normalize-value label arg)))
      (use-package-normalize-paths label (eval value))))
   ((stringp arg)
    (let ((path (if (file-name-absolute-p arg)
                    arg
                  (mwb-user-emacs-file arg))))
      (list path)))
   ((and (not recursed) (listp arg) (listp (cdr arg)))
    (mapcar #'(lambda (x)
                (car (use-package-normalize-paths label x t))) arg))
   (t
    (use-package-error
     (concat label " wants a directory path, or list of paths")))))


;;;; :mwb-load-path

(defun use-package-normalize/:mwb-load-path (_name keyword args)
  (use-package-as-one (symbol-name keyword) args
    #'use-package-normalize-mwb-paths))

(defun use-package-handler/:mwb-load-path (name _keyword arg rest state)
  (use-package-handler/:load-path name _keyword arg rest state))

(setq use-package-keywords
      (mwb-insert-before-element :load-path :mwb-load-path  use-package-keywords))
#+end_src
** Customisation file
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:A28603F3-9100-4C41-855A-5D202E7ACFE3
:END:
Yes Aquamacs does this but in a directory with a space. So put with code so can be under source code control and user-emacs-directory is not.

I like to make commits see what they are about. The customization file is just a dump. Initsplit can split it up but seemed buggy, basically if you get a regex wrong it blows up.
Not much documentation So copy from the only 2 jwigeley and https://github.com/dabrahams/dotemacs
Also while we are here let's improve customisation fully.
*** Set the customise Directory
:PROPERTIES:
:ID:       org_mark_2020-10-26T12-58-28+00-00_mini12.local:D165DFFB-4E7B-4091-AE48-8C856E1EEBBE
:END:
#+NAME: org_mark_2020-10-26T12-58-28+00-00_mini12.local_5C04392C-E9A6-4460-A6F8-EA73352395E5
#+begin_src emacs-lisp
(setq mwb-init-customize-directory (mwb-user-emacs-file "settings/"))
#+end_src
*** Load the main custom file
:PROPERTIES:
:ID:       org_mark_2020-10-26T12-58-28+00-00_mini12.local:A6265F12-4BAF-49FD-9576-6F8734A5EF50
:END:
 #+NAME: org_mark_2020-10-26T12-58-28+00-00_mini12.local_4193D052-7CCE-4F3E-A98F-7D958AB4E692
 Note initsplit needs to be in here or we load it twice. Twice is OK depending if there are no other things needed to be in early load.
 #+NAME: org_mark_2020-11-03T11-29-59+00-00_mini12.local_91DE0DF5-1D10-4E57-A864-CC60F44BFC5B
 #+begin_src emacs-lisp
 (setq custom-file (mwb-user-emacs-file "custom.el"))
 (load custom-file 'noerror)
 #+end_src
*** cus-edit
:PROPERTIES:
:ID:       org_mark_2020-10-29T09-11-06+00-00_mini12.local:8903AD91-0364-4F47-8611-7D993C6A40D5
:END:
The emacs basic version. Need it for dependency load use by initsplit
#+NAME: org_mark_2020-10-29T09-11-06+00-00_mini12.local_87F0132E-8CB1-4665-BADC-9CAF45256776
#+begin_src emacs-lisp
(use-package cus-edit
  ;; aquamacs has already done this
  :demand)
#+end_src
*** cus-edit+
:PROPERTIES:
:ID:       org_mark_2020-10-29T09-11-06+00-00_mini12.local:77206F44-BCA1-43A4-B903-DE073068E4EC
:END:
More Drew Adams https://www.emacswiki.org/emacs/CustomizingAndSaving#CustomizePlus
#+NAME: org_mark_2020-10-29T09-11-06+00-00_mini12.local_D3E6606B-7E85-4FD1-BA2D-3B40885ED97B
#+begin_src emacs-lisp
(use-package cus-edit+
  :disabled                             ; messes up switch-to-buffers advice

  :after cus-edit
  :mwb-load-path "site-lisp/emacs_wiki"
  :config
  (customize-toggle-outside-change-updates 99))
#+end_src

*** Initsplit
:PROPERTIES:
:ID:       org_mark_2020-10-28T22-44-31+00-00_mini12.local:F570566C-F55D-4BBF-B7B9-16917621FC82
:END:
Now initsplit
Bootstrapping is fun.
Needs in initsplit to load twice to get stuff in initsplit, but then I put all of initsplit in a settings file. ooops - it does not load.
Obvious way is to put in the root custom file - but I want that to die.
I caould keep as a set.
But hack an load it directly
#+NAME: org_mark_2020-10-29T09-11-06+00-00_mini12.local_04FB6D16-A43C-4D7C-9767-4C79FC0FABDD
#+begin_src emacs-lisp
(use-package initsplit
  :mwb-load-path "site-lisp"
  :after cus-edit
  :init
  (setq initsplit-pretty-print t)
  (setq initsplit-default-directory mwb-init-customize-directory)
  (setq initsplit-load-function 'initsplit-load-if-exists-and-does-not-match)
  (load (expand-file-name "initsplit-settings.el" mwb-init-customize-directory))
  :custom
  ;; Set here and not in custom as the values need evaluation of the running environment
  (initsplit-ignore-prefixes
   (list
    (unless *aquamacs* "aquamacs")
    (unless (string-equal system-type "darwin") "mac")
    (unless (string-equal system-type "windows") "Windows"))))
#+end_src
*** Get the regexp for files in settings
:PROPERTIES:
:ID:       org_mark_2020-10-28T14-09-54+00-00_mini12.local:31706694-3B07-43B3-9257-579C34E14655
:END:
Not we want the prefix e.g. in org-settings.el to be ably to extract org
#+NAME: org_mark_2020-10-28T14-09-54+00-00_mini12.local_FC80650B-1920-4585-8114-B5E1E8F57945
#+begin_src emacs-lisp
(setq elhome-settings-file-regexp
      (rx-to-string '(seq bos
                          (group
                           (one-or-more nonl))
                          "-settings.el"
                          eos)))
#+end_src
*** Load the others
:PROPERTIES:
:ID:       org_mark_2020-10-25T21-37-40+00-00_mini12.local:A3A72481-AFA1-4481-94CA-E40E8D4BAA23
:END:
#+NAME: org_mark_2020-10-27T17-11-46+00-00_mini12.local_70B8AC35-681E-4DCC-BB95-1D3FED32E2A7
#+begin_src emacs-lisp :tangle no
(defun mwb-init-customize-directory-files (&optional fullpath)
  (directory-files mwb-init-customize-directory fullpath
                   elhome-settings-file-regexp))

(--map (load (expand-file-name it ))
       (mwb-init-customize-directory-files "fullpath"))
#+end_src
*** Add dynamic customization.
:PROPERTIES:
:ID:       org_mark_2020-10-27T17-11-46+00-00_mini12.local:E45389E9-39EB-4242-9CA0-08690EE161DD
:END:
Not used anymore
Create the file the use the prefix to get the rest
Note you have to actually save something to move to the file. Best load saved customisations and then save the page - or if small the just its page.
#+NAME: org_mark_2020-10-27T17-11-46+00-00_mini12.local_FF7BF482-78EC-4294-8B9A-614BBF768E7D
#+begin_src emacs-lisp :tangle no
(defun elhome-dynamic-customizations-alist ()
  "Return a list of (PATTERN, FILENAME) pairs that, when added to
`initsplit-customizations-alist', treats all the *-settings.el
files in `elhome-settings-directory' as initsplit customization
files.

A file with the name \"foobar-settings.el\" will store all the
customizations whose name begins with \"foobar-\".  Note: depends
on initsplit!"
  (let* ((settings-files
          (remove-if-not
           (lambda (s) (string-match-p elhome-settings-file-regexp s))

           (mwb-init-customize-directory-files)))

         ;; sort by decreasing length allows org-settings.el and
         ;; org-attach-settings.el to coexist peacefully --- the
         ;; longer (thus more-specific) match will be made first
         (sorted-files (sort settings-files
                             (lambda (x y) (> (length x) (length y))))))
    ;; Add elements to the effective customizations alist used by
    ;; the advice `initsplit-custom-save-all'.
    (mapcar (lambda (f)
              `(,(progn (string-match elhome-settings-file-regexp f)
                        (concat "\\`" (regexp-quote (match-string 1 f)) "-"))
                ,(expand-file-name f mwb-init-customize-directory) nil nil))
            sorted-files)))

(add-to-list 'initsplit-dynamic-customizations-alist 'elhome-dynamic-customizations-alist)

;; (elhome-dynamic-customizations-alist)
#+end_src
** Key bindings
:PROPERTIES:
:ID:       org_mark_2020-10-01T11-27-32+01-00_mini12.local:0EFA9EE3-5983-433A-854A-8A72FEB39FFC
:END:
These differ. Even on my Mac the home key is <home> on Aquamacs and <H-left> on Carbon emacs and <home> on Plain Emacs + also terminal + MS-windows.
So I want to set my own values to use as bindings occur.
First need to set the environment as Aquamacs has already done this

Emacs 27 mac - calls iso-transl at some time sp messes up Alt key bindings
Also the bindings are less and the menu is less so might be best to copy oskeys.el from Aquamacs and use super as command. Note that would need aquamacs redo etc.

Mouse3 might also give a more interesting menu + the extra bit of standard Emacs mouse extend selection plus I want a different menu for say treemacs.

*** Aquamacs problem
:PROPERTIES:
:ID:       org_mark_2020-01-24T12-43-54+00-00_mini12:628BE0A1-2280-4914-98A9-12830F84FEF8
:END:
There are somethings that Aquamacs does that I want to undo.
e.g. key bindings that they do to stop modes changing them.
#+NAME: org_mark_2020-01-24T12-43-54+00-00_mini12_AD89749B-35DE-4103-925B-3420D46D933F
#+begin_src emacs-lisp
(when *aquamacs*
  (unbind-key "<end>" osx-key-mode-map)
  (unbind-key "<home>" osx-key-mode-map))
#+end_src
*** Set bindings
:PROPERTIES:
:ID:       org_mark_2020-10-01T14-52-55+01-00_mini12.local:E7A35B8E-8937-4EA2-939A-CDEAE681B190
:END:
Deal with stuff done by Aquamacs
#+NAME: org_mark_2020-10-01T14-52-55+01-00_mini12.local_2D8F5C87-38BB-47E2-A162-03E5E42630F4
#+begin_src emacs-lisp
(unless *aquamacs*
  (use-package redo+
    :mwb-load-path "site-lisp/Emacs_wiki")
  (use-package mac-key-mode
    :diminish
    :config (mac-key-mode 1)))
#+end_src

*** Name keys
:PROPERTIES:
:ID:       org_mark_2020-10-01T11-27-32+01-00_mini12.local:069F9DA8-F579-40AF-86F2-ECE349FF6181
:END:
#+NAME: org_mark_2020-10-01T11-27-32+01-00_mini12.local_956A48EE-5DDA-4C11-B931-C857DED78CEB
#+begin_src emacs-lisp
;; Set best default names - begin with aquamacs and NS emacs
(setq mwbkey-home "<home>"
      mwbkey-end "<end>"
      mwbkey-page-up "<prior>"
      mwbkey-page-down "<next>"
      mwbkey-insert "<f18>"             ; This is a karabinier bind as insert
                                        ; on Aquamacs is help- it really should
                                        ; be fn
      mwbkey-delete "<kp-delete>")

(if *macport*
    (setq mwbkey-home "H-<left>"
          mwbkey-end "H-<right>"
          mwbkey-page-up "H-<up>"
          mwbkey-page-down "H-<down>"
          mwbkey-insert "<f18>"
          mwbkey-delete "<H-backspace>"))
#+end_src

*** Mac modifier key Bindings
:PROPERTIES:
:ID:       org_mark_2020-10-05T17-59-35+01-00_mini12.local:D8D6B3EA-64F3-4619-B910-8AA595EC0DF1
:END:
We have fn available so have it as hyper and then use Karabiner  (try iCue later) to map Caps Lock and Window key to hyper. Super is used sometimes so I think is confusing and as noted sequence of keys (emacs key-chord and hydra) is better.
I don't use the right hand modifier keys so not set separately.
Things got changed on one run so set here and remove from customisation
#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_47DFBF48-A6BD-4CFA-925B-811981A1E92B
#+begin_src emacs-lisp
(if *aquamacs*
    (setq ns-function-modifier 'hyper
          ns-alternate-modifier 'meta
          ns-right-alternate-modifier nil
          ns-right-command-modifier 'super
          )
  (setq mac-function-modifier 'hyper
        mac-option-modifier 'meta
        mac-command-modifier 'alt
        mac-right-option-modifier nil
        mac-right-command-modifier 'super
        )
  )
#+end_src

*** Choose mode map.
:PROPERTIES:
:ID:       org_mark_2020-10-01T11-27-32+01-00_mini12.local:27CB584A-8AD0-44AD-B508-D9765EBFD3A4
:END:
Both Aquamacs and mac-keys-mode introduce a map for macOS keys. Unfortunately it is not the same one. So lets add indirection.
#+NAME: org_mark_2020-10-01T11-27-32+01-00_mini12.local_EDE062E4-8660-4455-B106-B376CA99E96C
#+begin_src emacs-lisp
(setq macos-key-map (if *aquamacs*
                        'osx-key-mode-map
                      'mac-key-mode-map))
#+end_src

*** Mouse 3
:PROPERTIES:
:ID:       org_mark_2020-10-04T16-13-47+01-00_mini12.local:CF4143CA-4F9C-4419-9B52-AFCF7207D667
:END:
Aquamacs has a full menu system there.mac-keys-mode has a fixed one. Then there is a default Emacs one.
Try with an enhanced one but test to mouse-4 which might have issues with treemacs but I think the order is OK
#+NAME: org_mark_2020-10-04T16-13-47+01-00_mini12.local_CFE25015-E4BD-4E9B-B653-B4D339B15563
#+begin_src emacs-lisp
(unless *aquamacs*
  (use-package "mouse3"
    :mwb-load-path "site-lisp/Emacs_wiki"
    :bind ("<mouse-4>" . 'mouse3-action-wo-save-then-kill)))
#+end_src
** Org Mode base setup
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:D93E7BE4-C5B1-419E-B03F-B2D4980DAF02
:END:
This is so the file can be processed by nullman's expand - basically no noweb weaving.
*** Force load of new version
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:CD8344F0-55B3-4A44-8910-693F375848EA
:END:
[[https://github.com/jwiegley/use-package/issues/319#issuecomment-471274348][mzuther  fix]] to load via package as otherwise loads from emacs. However first attempt dec 2019 seemed not to be needed but leave here.
 #+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_CD5FDF9B-34ED-4E57-917C-C1C2295C864F
 #+begin_src emacs-lisp
(assq-delete-all 'org package--builtins)
 #+end_src
*** Do the load of org from package.el
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:E973F582-6BC0-4363-A8C1-EAC4A6878532
:END:
With some variables set from https://github.com/grettke/help as these are cutomisation variables they need to be before org.el.

Allow single-character alphabetical bullet lists. This configuration must occur
before loading Org-Mode. *Never* remove this from a submitted ECM.

#+NAME: org_gcr_2017-05-12_mara_050624C5-3BC5-4049-B070-F0A6736EB754
#+BEGIN_SRC emacs-lisp
(setq org-list-allow-alphabetical t)
#+END_SRC
Unchecked boxes prevent marking the parent as done. This configuration must
occur before loading Org-Mode. *Never* remove this from a submitted ECM.

#+NAME: org_gcr_2017-05-12_mara_7A650900-7023-4EA7-B2DB-CAB39437E9F3
#+BEGIN_SRC emacs-lisp
(setq org-enforce-todo-checkbox-dependencies t)
#+END_SRC

#+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_450E5072-6040-468E-843F-E62E4CB34FA7
#+begin_src emacs-lisp
(use-package org
  :defer t
  :ensure t)
#+end_src
* The rest
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:2A8A375D-2708-4559-9CA7-0F81B8DE4247
:END:
This all can be written using latest org mode allowing weaving etc.
** Complex Org Mode
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:913C5D29-620D-4FB7-9D2E-31D3FE538503
:END:

This file is the only one that using noweb weaving so must be loaded via a proper org babel

But has requirements like hydra
*** Hydra
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:F4B80C2A-6E55-4DAA-A894-CEAAF485CEEB
:END:
Need key setting menus.
#+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_4EC591E8-D02C-4F21-97C1-80F28A75490F
#+begin_src emacs-lisp
(use-package hydra :ensure t
  :config (setq hydra-look-for-remap t))
(use-package use-package-hydra :ensure t)
#+end_src
**** major mode hydra
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:B0B1AA76-E4F7-424D-A9EA-1E430BD90E28
:END:
#+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_7958B394-66F9-4AF5-8C22-10F1CAB276B3
#+begin_src emacs-lisp
(use-package major-mode-hydra
  :ensure t
  :demand
  :bind
  ("H-a" . major-mode-hydra)
  :config
  (progn
    (setq major-mode-hydra-invisible-quit-key "q")
    (defun jp-major-mode-hydra-title-generator (_)
      `(with-mode-icon major-mode
                       (propertize (s-concat (format-mode-line mode-name) " Commands")
                                   'face '(:weight bold :height 1.1))
                       1.1))
    (setq major-mode-hydra-title-generator #'jp-major-mode-hydra-title-generator)))
#+end_src
*** Remainder of org
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:D04B3869-70E6-42A2-A052-584E36C9DAB7
:END:
This needs the full expansion
#+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_2869E62E-0E38-4C7C-BFBC-70095F484FC1
#+begin_src emacs-lisp
(mwb-init-load "init/org-all")
#+end_src
** Non aquamacs
:PROPERTIES:
:ID:       org_mark_2020-10-01T11-27-32+01-00_mini12.local:E9328D54-1280-43B6-9DA6-D921C7A3AFF9
:END:
This config was written using Aquamacs which adds things.
Some are just too embedded
*** set-word-wrap
:PROPERTIES:
:ID:       org_mark_2020-10-01T11-27-32+01-00_mini12.local:9DB3DB85-AFC6-483E-8D3D-AB11217FB071
:END:
This gets set in customize for all modes. Copy from Aquamacs
#+NAME: org_mark_2020-10-01T11-27-32+01-00_mini12.local_0DFCC3B0-BDFE-4A98-87D3-46866915E99E
#+begin_src emacs-lisp
(unless *aquamacs*
  (defun turn-off-longlines ()
  "Unconditionally turn off Longlines mode."
  (interactive)
  (and (boundp 'longlines-mode)
       (longlines-mode -1)))
  (defun set-word-wrap ()
    "Turn on Word Wrap mode in current buffer.
This function sets `auto-fill-mode', `truncate-lines' and `visual-line-mode'."
    (interactive)
    (turn-on-visual-line-mode)          ; let it save settings first
    (turn-off-longlines)
    (turn-off-auto-fill)
    (setq truncate-lines nil)
    (if (interactive-p)
        (message "Line wrapping set to Word Wrap mode in this buffer."))))
#+end_src
** The rest
:PROPERTIES:
:ID:       org_mark_2020-02-06T12-27-27+00-00_mini12:35D80650-3C0F-4147-8B3A-3BC84158367B
:END:
Now get the rest which can be expanded by org.
#+NAME: org_mark_2020-02-06T12-27-27+00-00_mini12_0F0B98B4-9FFF-497E-9DE1-DD93A3CCA73A
#+begin_src emacs-lisp
(mwb-init-load "init/all")
#+end_src
