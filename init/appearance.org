#+TITLE Emacs configuration - appearance
#+PROPERTY:header-args :cache yes :tangle yes :comments link
#+STARTUP: content

This covers what emacs looks like and how windows/frames/menus behave

* Colour theme
Aquamacs is stuck with old color themes not the cusomisable ones
#+begin_src emacs-lisp
(require 'color-theme)
(eval-after-load "color-theme"
  '(progn
     (color-theme-initialize)
     (color-theme-high-contrast)))
#+end_src

* Remove toolbar
#+begin_src emacs-lisp
(tool-bar-mode 0)
#+end_src

* TODO Show line for errors etc

** Beacon mode
Beacon-mode: flash the cursor when switching buffers or scrolling  the goal is to make it easy to find the cursor
but does not seem to work well
#+begin_src emacs-lisp
(use-package beacon
  :ensure t
  :defer t
  :custom (beacon-blink-when-focused t)
  :init (eval-when-compile
		  ;; Silence missing function warnings
		  (declare-function beacon-mode "beacon.el"))
  :config
  (defun maybe-recenter-current-window ()
	(when (and (equal (current-buffer) (window-buffer (selected-window)))
			   (not (eq recenter-last-op 'middle)))
	  (recenter-top-bottom)))
  (add-hook 'beacon-before-blink-hook #'maybe-recenter-current-window)
  (dolist (mode '(comint-mode term-mode))
	(push mode beacon-dont-blink-major-modes))
  (setq beacon-blink-duration 1)
  (beacon-mode 1))
#+end_src

** Hi line
Try to highlight the line but it is messed up see https://emacs.stackexchange.com/a/10463/9874
but the answer below has an interesting suggestion
#+begin_src emacs-lisp

(use-package hl-line
  :if window-system
  :preface
  (defun my-hl-line-range-function ()
    (cons (line-end-position) (line-beginning-position 2)))
  (setq hl-line-range-function #'my-hl-line-range-function)

  :config
  (set-face-attribute 'hl-line nil :inherit nil :background "gray")
  (setq global-hl-line-sticky-flag t)
  (global-hl-line-mode 1)
  )
#+end_src
* Windows
I think I now want mainly one window and have splits but tabs are useful.

** Move/split
 Try hydra from [[https://www.reddit.com/r/emacs/comments/8of6tx/tip_how_to_be_a_beast_with_hydra/][reddit]] but note user is a vi user for movements so will be messed around with. But a few minutes playing does not add much so use forst from [[https://github.com/abo-abo/hydra/wiki/Window-Management][Hydra wiki]] Needs winner mode for some functions to save window state.
 #+begin_src emacs-lisp
 (use-package winner
   :unless noninteractive
   :defer 5
   :config
   (winner-mode)
   :commands (winner-undo winner-redo))

 (defhydra hydra-window (:color red
								:hint nil)
   "
  Split: _v_ert _x_:horz
 Delete: _o_nly  _da_ce  _dw_indow  _db_uffer  _df_rame
   Move: _s_wap
 Frames: _f_rame new  _df_ delete
   Misc: _m_ark _a_ce  _u_ndo  _r_edo"
   ("h" windmove-left)
   ("j" windmove-down)
   ("k" windmove-up)
   ("l" windmove-right)
   ("H" hydra-move-splitter-left)
   ("J" hydra-move-splitter-down)
   ("K" hydra-move-splitter-up)
   ("L" hydra-move-splitter-right)
   ("|" (lambda ()
		  (interactive)
		  (split-window-right)
		  (windmove-right)))
   ("_" (lambda ()
		  (interactive)
		  (split-window-below)
		  (windmove-down)))
   ("v" split-window-right)
   ("x" split-window-below)
										 ;("t" transpose-frame "'")
   ;; winner-mode must be enabled
   ("u" winner-undo)
   ("r" winner-redo) ;;Fixme, not working?
   ("o" delete-other-windows :exit t)
   ("a" ace-window :exit t)
   ("f" new-frame :exit t)
   ("s" ace-swap-window)
   ("da" ace-delete-window)
   ("dw" delete-window)
   ("db" kill-this-buffer)
   ("df" delete-frame :exit t)
   ("q" nil)
										 ;("i" ace-maximize-window "ace-one" :color blue)
										 ;("b" ido-switch-buffer "buf")
   ("m" headlong-bookmark-jump))
 (bind-key "H-w" 'hydra-window/body)
 #+end_src

** Stop special buffers opening in new window
 It is an aquamacs setting see [[https://www.emacswiki.org/emacs/AquamacsFAQ#toc19][FAQ]]
 #+begin_src emacs-lisp
 (one-buffer-one-frame-mode -1)
 (setq  special-display-regexps nil)
 #+end_src

