#+TITLE:  Fill And Wrap
#+AUTHOR: Mark Bestley
#+EMAIL:  @bestley.co.uk
#+DATE:   12 Feb 2021
#+PROPERTY:header-args :cache yes :tangle yes :comments noweb
#+STARTUP: overview

* Fill and wrap
:PROPERTIES:
:ID:       org_2020-12-05+00-00:7B38E572-7C2E-4BC1-B03E-FD4E4396CB6E
:END:
Lets put these in one place
Fill is use hard returns. Wrap keeps the line in one in the file
** Non aquamacs
:PROPERTIES:
:ID:       org_mark_2020-10-01T11-27-32+01-00_mini12.local:E9328D54-1280-43B6-9DA6-D921C7A3AFF9
:END:
This config was written using Aquamacs which adds things.
Some are just too embedded
*** set-word-wrap
:PROPERTIES:
:ID:       org_mark_2020-10-01T11-27-32+01-00_mini12.local:9DB3DB85-AFC6-483E-8D3D-AB11217FB071
:END:
This gets set in customize for all modes. Copy from Aquamacs
#+NAME: org_mark_2020-10-01T11-27-32+01-00_mini12.local_0DFCC3B0-BDFE-4A98-87D3-46866915E99E
#+begin_src emacs-lisp
(unless *aquamacs*
  (defun turn-off-longlines ()
  "Unconditionally turn off Longlines mode."
  (interactive)
  (and (boundp 'longlines-mode)
       (longlines-mode -1)))
  (defun set-word-wrap ()
    "Turn on Word Wrap mode in current buffer.
This function sets `auto-fill-mode', `truncate-lines' and `visual-line-mode'."
    (interactive)
    (turn-on-visual-line-mode)          ; let it save settings first
    (turn-off-longlines)
    (turn-off-auto-fill)
    (setq truncate-lines nil)
    (if (interactive-p)
        (message "Line wrapping set to Word Wrap mode in this buffer."))))
#+end_src

** Fill column in code
:PROPERTIES:
:ID:       org_mark_2020-02-24T14-59-33+00-00_mini12.local:573326D1-BD3B-4F5B-A721-E49A096DE72B
:END:
Where to wrap the line iff too long. Set locally in prog-modes and differ in comment

This is from [[https://www.emacswiki.org/emacs/AutoFillMode][emacs wiki]]
However only want to fill modes where there are line based comments e.g. Emacs lisp. If there is a block comment then don't fill
#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_9B7EA331-7A72-4DCE-9798-9D3B378A8C1B
#+begin_src emacs-lisp
(setq-default comment-auto-fill-only-comments t)
(defun _mwb-prog-auto-fill (max-column)
  (setq-local comment-auto-fill-only-comments t)
  (setq-local fill-column max-column)
  (setq-local comment-fill-column max-column)
  (auto-fill-mode 1))

;; use by setting in the actual program mode
;;(add-hook 'prog-mode-hook 'mwb-prog-auto-fill)
(defun mwb-prog-auto-fill-80 ()
  "Fill for 80 column screen - I only use where standards are enforced"
  (_mwb-prog-auto-fill 79))

(defun mwb-auto-fill-80 ()
  "Fill for 80 column screen "
  (_mwb-prog-auto-fill 76))

(defun mwb-prog-auto-fill-120 ()
  "Fill for 120 column screen - \"I only use where standards are enforced\"s to be my current screen"
  (_mwb-prog-auto-fill 119))
#+end_src

** Fill unfill region
:PROPERTIES:
:ID:       org_2020-12-05+00-00:294E3107-DC95-404D-B72F-9EDC09C6F4C8
:END:
Look at aquamacs-editing.el

** Set defaults
:PROPERTIES:
:ID:       org_2020-12-05+00-00:A67E0CAF-C655-434D-A9EE-99510387828D
:END:
This is in text mode
#+NAME: org_2020-12-05+00-00_A13E1BED-9FD1-4F87-91FA-B180A313487C
#+begin_src emacs-lisp
(setq text-mode-hook '(abbrev-mode set-word-wrap))
(setq-default auto-fill-function nil)
(setq fill-nobreak-predicate
   '(fill-single-word-nobreak-p fill-single-char-nobreak-p))
(visual-line-mode 1)
#+end_src
