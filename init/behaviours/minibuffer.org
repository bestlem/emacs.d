#+TITLE:  Minibuffer
#+AUTHOR: Mark Bestley
#+EMAIL:  git@bestley.co.uk
#+DATE:   24 Jun 2021
#+PROPERTY:header-args :cache yes :tangle yes :comments noweb
#+STARTUP: overview
* Overview
:PROPERTIES:
:ID:       org_mark_mini20.local:20210624T122042.270790
:END:
Play with minibuffer. Ivy sort of dopes this but for its own commands - see ivy-posframe especially
* [[https://github.com/muffinmad/emacs-mini-frame][emacs-mini-frame]]
:PROPERTIES:
:ID:       org_mark_mini20.local:20210624T122042.268685
:END:
This puts it at the top
But it does blank the header line - noticeable with ivy-posframe.
Also I want it in middle or over the non treemacs frame. Look at treemacs-current-visibility to see if visible in current frame

#+NAME: org_mark_mini20.local_20210624T122042.265404
#+begin_src emacs-lisp
(when *emacs/>=26p*
  (use-package mini-frame
	:demand
	:disabled
	:ensure t
	:config
	(defun mwb-mini-treemacs-width ()
	  "Find width of treemacs window if it exists plus a fringe."
	  (if (treemacs-get-local-window)
		  (+ treemacs-width 0.5)
		0.5))

	(defun mwb-mini-frame-parameters ()
	  "Normal minibuffer extents."
	  `((left . ,(mwb-mini-treemacs-width)) (top . 0.0) (width . 1.0) (height . 1)))
	(defun mwb-mini-frame-completions-parameters ()
	  "Minibuffer for completions extents."
	  `((left . ,(mwb-mini-treemacs-width)) (width . 1.0) (height . 0.25)))


	(setq mini-frame-show-parameters #'mwb-mini-frame-parameters)
	(setq mini-frame-completions-show-parameters
		  #'mwb-mini-frame-completions-parameters)
	(mini-frame-mode 1)))
#+end_src
* [[https://github.com/honmaple/emacs-maple-minibuffer][Maple-minibuffer]]
:PROPERTIES:
:ID:       org_mark_mini20.local:20210625T190637.365866
:END:
#+NAME: org_mark_mini20.local_20210625T190637.361846
#+begin_src emacs-lisp
(use-feature maple-minibuffer
  :hook (after-init . maple-minibuffer-mode)
  :config
  (setq maple-minibuffer:position-type 'window-top-left
        maple-minibuffer:border-color "gray50"
        maple-minibuffer:height 1
        maple-minibuffer:width 0.7
        maple-minibuffer:cache t)

  (setq maple-minibuffer:action '(read-from-minibuffer read-string)
        maple-minibuffer:ignore-action '(evil-ex eval-expression))

  (add-to-list 'maple-minibuffer:ignore-action 'org-schedule)
  (add-to-list 'maple-minibuffer:ignore-regexp "^helm-")

  ;; more custom parameters for frame
  (defun maple-minibuffer:parameters ()
    "Maple minibuffer parameters."
    `((height . ,(or maple-minibuffer:height 10))
      (width . ,(or maple-minibuffer:width (window-pixel-width)))
      (left-fringe . 5)
      (right-fringe . 5))))
#+end_src
