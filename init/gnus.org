#+TITLE Emacs configuration gnus
#+PROPERTY:header-args :cache yes :tangle yes  :comments link

#+STARTUP: content

#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_B5711DCA-2D01-4ADE-A4FF-CB3E2E6A583E
#+begin_src emacs-lisp
(setq gnus-read-active-file nil)
(setq gnus-use-adaptive-scoring t)
(setq gnus-default-adaptive-score-alist
	  '((gnus-unread-mark)
		(gnus-read-mark (subject 1))
		(gnus-ticked-mark (subject 10))
		(gnus-killed-mark (subject -5))
		(gnus-catchup-mark (subject -1))
		(gnus-spam-mark (from -50))))
(setq user-full-name "Mark Bestley")
(setq user-mail-address "gnus@bestley.co.uk")

(setq gnus-visual t
	  gnus-large-newsgroup 4000)

(defun exit-gnus-on-exit ()
  (if (and (fboundp 'gnus-group-exit)
		   (gnus-alive-p))
	  (with-current-buffer (get-buffer "*Group*")
		(let (gnus-interactive-exit)
		  (gnus-group-exit)))))

(add-hook 'kill-emacs-hook 'exit-gnus-on-exit)
#+end_src
* Backups
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:A14E37C1-5805-43D2-A9B0-AC0DFF42BEA0
:END:
Well turn them off
#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_8DED55B5-DC3E-4E7B-ACF9-45F8C7D77127
#+begin_src emacs-lisp
(defun turn-off-backup ()
  (set (make-local-variable 'backup-inhibited) t))
(add-hook 'nnfolder-save-buffer-hook 'turn-off-backup)
#+end_src

* Servers
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:362C07A4-045F-4987-84D2-6D8E61BD5558
:END:
  #+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_B2356EEF-66A7-45A4-8287-C9E84A56E33A
  #+begin_src emacs-lisp
  (setq auth-source-debug 'trivia)
  (setq gnus-read-active-file 'some)
  (setq gnus-secondary-select-methods '((nntp "news.gmane.io")
                                        (nntp "bar.baen.com")))
  (setq gnus-select-method '(nntp "news.eternal-september.org"))
  #+end_src
* Group buffer
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:69B84509-B2E9-488C-AA74-7AC740464640
:END:
Put groups in order by my ranking (comes from NeXT news setup
  #+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_BE3A6DE4-5A1C-4EDC-BA10-3A62E1A307F4
  #+begin_src emacs-lisp
  (setq gnus-group-sort-function 'gnus-group-sort-by-rank)
  #+end_src
Add a hydra https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/gnus-guide-en.org
#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_2008EC6E-C927-4D6C-8F4A-F72FF33E521F
#+begin_src emacs-lisp
(use-package gnus-group
  :bind (:map gnus-group-mode-map
              ("H-a" . hydra-gnus-group/body))
  :hydra (hydra-gnus-group (:color blue)
                           "
[_A_] Remote groups (A A) [_g_] Refresh          [_S_] Sort by level
[_L_] Local groups        [_\\^_] List servers   [_s_] Set level
[_c_] Mark all read       [_m_] Compose new mail
[_G_] Search mails (G G)  [_#_] Mark mail
"
                           ("A" gnus-group-list-active)
                           ("L" gnus-group-list-all-groups)
                           ("c" gnus-topic-catchup-articles)
                           ("G" dianyou-group-make-nnir-group)
                           ("g" gnus-group-get-new-news)
                           ("^" gnus-group-enter-server-mode)
                           ("m" gnus-group-new-mail)
                           ("#" gnus-topic-mark-topic)
                           ("S" gnus-group-sort-by-level)
                           ("s" (lambda () (interactive) (gnus-group-set-current-level)))
                           ("q" nil)))
#+end_src
* Summary buffer
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:9EDC2D64-A78E-4A43-AE91-20545CB9D79A
:END:
** Threads
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:02EDEFDB-B154-47E0-AB5B-13EEA6B01F29
:END:
   Collapse threads when entering a group
   #+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_7F32243E-4A25-4935-883B-EE7FC54AA1C8
   #+begin_src emacs-lisp
   (add-hook 'gnus-summary-prepared-hook 'gnus-summary-hide-all-threads)
   #+end_src
   #+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_AD216EFA-5702-4A33-A1D7-EEB41DB0EA34
   #+begin_src emacs-lisp
   (setq gnus-fetch-old-headers 'some               ; Try to connect threads with the minimum number of old headers
		 gnus-build-sparse-threads 'some            ; Include not-received articles too with References:
		 gnus-summary-gather-subject-limit 'fuzzy   ; Use a smart fuzzy Subject-matcher
		 gnus-summary-thread-gathering-function 'gnus-gather-threads-by-references ; Use the References: header to thread root by dummy-article-creation
		 gnus-treat-display-smileys nil             ; Urgh. You must be joking.
		 gnus-thread-ignore-subject t               ; Ignore Subject: changes

		 gnus-thread-hide-killed t)                 ; Hiding propagates to subtrees
   #+end_src
** Sort Order
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:D1C6B89C-0CE1-4FC7-B29A-3420DEC97802
:END:
   Push the threads with bigger score on top of the buffer
   #+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_12F9DBB8-2351-459B-A1F2-A8774BC2379B
   #+begin_src emacs-lisp
   (setq gnus-thread-sort-functions
		 '(gnus-thread-sort-by-number
		   (not gnus-thread-sort-by-date)		; Dates matter...
		   gnus-thread-sort-by-total-score))
   #+end_src
** Tree
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:757C714E-BC96-4925-8FF9-B1A6E74A677E
:END:
 #+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_3D80CD27-96E0-4735-9EB5-AA2B404C2B71
 #+begin_src emacs-lisp
 (setq gnus-use-trees t
	   gnus-generate-tree-function 'gnus-generate-horizontal-tree
	   gnus-tree-minimize-window nil)
 (gnus-add-configuration
  '(article
	(vertical 1.0
			  (horizontal 0.25
						  (summary 0.75 point)
						  (tree 1.0))
			  (article 1.0))))

 (setq gnus-thread-hide-subtree
	   '(or gnus-article-unread-p
			gnus-article-unseen-p))
 #+end_src
** Prettify tree
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:A58333F7-FF23-4C0A-8F27-2D97E8ED92C5
:END:
From [[http://doc.rix.si/cce/cce-gnus.html][Here]]
#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_C487340F-0BAB-4B52-984E-41534760ABBD
#+begin_src emacs-lisp
(setq gnus-summary-line-format "%*%U%R%z%3t%4i %4V %(%&user-date; %-15,15f  %B%s%)\n"

	  gnus-sum-thread-tree-false-root ""
	  gnus-sum-thread-tree-indent " "
	  gnus-sum-thread-tree-leaf-with-other "├► "
	  gnus-sum-thread-tree-root ""
	  gnus-sum-thread-tree-single-leaf "╰► "
	  gnus-sum-thread-tree-vertical "│"
	  gnus-user-date-format-alist '((t . "%d %b %Y %H:%M")))
#+end_src
** Hydra
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:E8EFA10F-FB8B-4F0D-ACCA-1657E77DC650
:END:
#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_9DE6155E-257B-4E50-8963-F6F79E307C6A
#+begin_src emacs-lisp
(use-package gnus-sum
  :bind (:map gnus-summary-mode-map
              ("H-a" . hydra-gnus-summary/body))
  :hydra( hydra-gnus-summary (:color blue)
  "
[_s_] Show thread   [_F_] Forward (C-c C-f)
[_h_] Hide thread   [_e_] Resend (S D e)
[_n_] Refresh (/ N) [_r_] Reply
[_!_] Mail -> disk  [_R_] Reply with original
[_d_] Disk -> mail  [_w_] Reply all (S w)
[_c_] Read all      [_W_] Reply all with original (S W)
[_#_] Mark          [_G_] Search mails
"
       ("s" gnus-summary-show-thread)
       ("h" gnus-summary-hide-thread)
       ("n" gnus-summary-insert-new-articles)
       ("F" gnus-summary-mail-forward)
       ("!" gnus-summary-tick-article-forward)
       ("d" gnus-summary-put-mark-as-read-next)
       ("c" gnus-summary-catchup-and-exit)
       ("e" gnus-summary-resend-message-edit)
       ("R" gnus-summary-reply-with-original)
       ("r" gnus-summary-reply)
       ("W" gnus-summary-wide-reply-with-original)
       ("w" gnus-summary-wide-reply)
       ("#" gnus-topic-mark-topic)
       ("G" dianyou-group-make-nnir-group)
       ("q" nil)))
#+end_src
* Article buffer
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:312BB8DC-395F-4F6C-AB50-81F336EFAD62
:END:
  #+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_2D9464DC-D14F-4AF0-830B-935B15693080
  #+begin_src emacs-lisp
  (setq gnus-single-article-buffer t
		mm-text-html-renderer 'shr)
  #+end_src
From same place as above
#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_E6250F15-2AC9-4CCC-8AC3-CFE8494CAD37
#+begin_src emacs-lisp
(use-package gnus-art
  :bind (:map gnus-article-mode-map
              ("H-a" . hydra-gnus-article/body))
  :hydra ( hydra-gnus-article (:color blue)
                              "
[_o_] Save attachment        [_F_] Forward
[_v_] Play video/audio       [_r_] Reply
[_d_] CLI to download stream [_R_] Reply with original
[_b_] Open external browser  [_w_] Reply all (S w)
[_f_] Click link/button      [_W_] Reply all with original (S W)
[_g_] Focus link/button
"
                              ("F" gnus-summary-mail-forward)
                              ("r" gnus-article-reply)
                              ("R" gnus-article-reply-with-original)
                              ("w" gnus-article-wide-reply)
                              ("W" gnus-article-wide-reply-with-original)
                              ("o" gnus-mime-save-part)
                              ("v" w3mext-open-with-mplayer)
                              ("d" w3mext-download-rss-stream)
                              ("b" w3mext-open-link-or-image-or-url)
                              ("f" w3m-lnum-follow)
                              ("g" w3m-lnum-goto)
                              ("q" nil))
     ;; y is not used by default
  )
#+end_src
* Old setup
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:AB214078-BB19-4135-8B01-396536C0F0BA
:END:
Bin it
#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_1214AA34-1B76-413C-8D80-D3AF2DC48692
#+begin_src emacs-lisp :tangle no
;; GNUS
; gmail
(require 'gnus )
	


(add-to-list 'gnus-secondary-select-methods 
			 '(nnimap "gmail"
					  (nnimap-address "imap.gmail.com")
					  (nnimap-server-port 993)
					  (nnimap-stream ssl))
)
;; (add-to-list 'gnus-secondary-select-methods 
;; 			 '(nnimap "by2"
;; 					  (nnimap-address "imap4.blueyonder.co.uk")
;; 					  (nnimap-server-port 143)
;; 					  )
;; )
(setq user-full-name "Mark Bestley")
(setq user-mail-address "gnus@bestley.co.uk")

(setq message-send-mail-function 'smtpmail-send-it)
(setq message-send-mail-function 'smtpmail-send-it
      smtpmail-starttls-credentials '(("smtp.gmail.com" 587 nil nil))
      smtpmail-auth-credentials '(("smtp.gmail.com" 587 "mark.bestley@googlemail.com" nil))
      smtpmail-default-smtp-server "smtp.gmail.com"
      smtpmail-smtp-server "smtp.gmail.com"
      smtpmail-smtp-service 587
      smtpmail-local-domain "bestley.co.uk")





;; mime from http://www.emacswiki.org/emacs/MimeTypesWithGnus
;; Inline images?
(setq mm-attachment-override-types '("image/.*"))



;; No HTML mail
(setq mm-discouraged-alternatives '("text/html" "text/richtext"))
(defun my-gnus-summary-view-html-alternative-in-browser ()
      "Display the HTML part of the current multipart/alternative MIME message
    in OmniWeb."
      (interactive)
      (save-current-buffer
        (gnus-summary-show-article)
        (set-buffer gnus-article-buffer)
        (let ((file (make-temp-file "html-message-" nil ".html"))
              (handle (nth 3 (assq 1 gnus-article-mime-handle-alist))))
          (mm-save-part-to-file handle file)
          (browse-url (concat "file://" file)))))


(define-key gnus-summary-mode-map [?K ?M]
  'my-gnus-summary-view-html-alternative-in-browser)



(setq nnimap-split-inbox
        '("INBOX" ))

(setq nnimap-split-rule '(("by2" ("INBOX" nnimap-split-fancy))
                          ("gmail" ("INBOX" nnimap-split-fancy))))
(setq nnimap-split-predicate "UNDELETED")
(setq nnimap-split-fancy ;; (1)
	  '(|                                ;; (2) begin a split list
	;;	(: gnus-registry-split-fancy-with-parent) ;; (3)
		;; splitting rules go here       ;; (4)

;; accu seems to have an issue
;;		("List-Id" ".*accu-general.*" "lists.accugeneral.new" )


;; we have size problems
 		("List-Id" ".*<\\(.+\\)\\.lists\\.mysociety\\.org>.*" "lists.\\1\\.mysociety")

		("List-Id" ".*<\\(.+\\)\\.googlegroups\\.com>.*" "lists.\\1\\.gg")

		("List-Id" ".*<\\(.+\\)>.*" "lists.\\1")

	;; old yahoo  has no List Id - nore does apple
		(any "\\b\\(\\w+\\)@yahoogroups\\.com" "lists.yahoo.\\1")
		(any "\\b\\(\\w+\\)@lists\\.apple\\.com" "lists.apple.\\1")

		;; Rules to hit the various google groups. We're having
		;; problems with dashes, so we have to expand these
	;; my fail	(any  "<\\(.*\\)\\.googlegroups\\.com>" "lists.google.\\1")

	;	(any "\\b\\(\\w+\\)-\\b\\(\\w+\\)@googlegroups.com" "lists.google.\\1-\\2")
	;	(any "\\b\\(\\w+\\)@googlegroups\\.com" "lists.google.\\1")
		(from "calendar-notification" "calendar" )
		(to "moneywell@bestley.co.uk" "moneywell" )

		; note also the subject has to have waf in it - but wait until I join more projects
		(from "codesite-noreply@google.com" 
			  (|
			   ("subject" "waf" "lists.waf-users.gg")
			   "unfiled"
			   )
			  )
		"unfiled"                          ;; (5)
        )
)


#+end_src
