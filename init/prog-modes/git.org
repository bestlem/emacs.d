#+TITLE Emacs configuration org Git configuration0
#+PROPERTY:header-args :cache yes :tangle yes :comments link
* Ediff
:PROPERTIES:
:ID:       org_mark_2020-10-25T17-28-25+00-00_mini12.local:9C579DD9-846E-4311-B3DA-BFDC51BEFE8C
:END:
This was originally all for gnus now I want to play with it
#+NAME: org_mark_2020-10-25T17-28-25+00-00_mini12.local_587F425F-D07A-4E6C-9D67-0FD960007DC2
#+begin_src emacs-lisp

;; set up git mainly for ediff use from git

;;
;; Setup for ediff.
;;
(require 'ediff)

(defvar ediff-after-quit-hooks nil
  "* Hooks to run after ediff or emerge is quit.")

(defadvice ediff-quit (after edit-after-quit-hooks activate)
  (run-hooks 'ediff-after-quit-hooks))

(setq git-mergetool-emacsclient-ediff-active nil)

(setq ediff-window-setup-function 'ediff-setup-windows-plain)
(setq ediff-split-window-function 'split-window-horizontally)

(defun local-ediff-before-setup-hook ()
  (setq local-ediff-saved-frame-configuration (current-frame-configuration))
  (setq local-ediff-saved-window-configuration (current-window-configuration))
  ;; (local-ediff-frame-maximize)
  (if git-mergetool-emacsclient-ediff-active
      (raise-frame)))

(defun local-ediff-quit-hook ()
  (set-frame-configuration local-ediff-saved-frame-configuration)
  (set-window-configuration local-ediff-saved-window-configuration))

(defun local-ediff-suspend-hook ()
  (set-frame-configuration local-ediff-saved-frame-configuration)
  (set-window-configuration local-ediff-saved-window-configuration))

(add-hook 'ediff-before-setup-hook 'local-ediff-before-setup-hook)
(add-hook 'ediff-quit-hook 'local-ediff-quit-hook 'append)
(add-hook 'ediff-suspend-hook 'local-ediff-suspend-hook 'append)

#+end_src
* Git specific
:PROPERTIES:
:ID:       org_mark_2020-10-25T17-28-25+00-00_mini12.local:0391A972-12D1-4EBD-B56F-D1581C2C44A7
:END:
#+NAME: org_mark_2020-10-25T17-28-25+00-00_mini12.local_A6020E60-25AF-4494-A18F-D6531B1F0607
#+begin_src emacs-lisp

;; Useful for ediff merge from emacsclient.
(defun git-mergetool-emacsclient-ediff (local remote base merged)
(interactive)
  (setq git-mergetool-emacsclient-ediff-active t)
(message "In  git-mergetool-emacsclient-ediff")
  (if (file-readable-p base)
      (ediff-merge-files-with-ancestor local remote base nil merged)
    (ediff-merge-files local remote nil merged))
  (recursive-edit))

(defun git-mergetool-emacsclient-ediff-after-quit-hook ()
  (exit-recursive-edit))

(add-hook 'ediff-after-quit-hooks 'git-mergetool-emacsclient-ediff-after-quit-hook 'append)

;; ; Changed for latest version 
;; ;; git://github.com/tsgates/git-emacs.git


;; Old setup
;; ;(require 'vc-git)
;; ;; (when (featurep 'vc-git) (add--list 'vc-handled-backends 'git))
;; ; (autoload 'git-blame-mode "git-blame"
;; ;           "Minor mode for incremental blame for Git." t);; git
;; ;; git://github.com/tsgates/git-emacs.git
;; (add-to-list 'load-path "/Users/mark/src/third_party/git-emacs")
;; (require 'git-emacs)

;; ;; http://zagadka.vm.bytemark.co.uk/magit/magit.html
;; ;(autoload 'magit-status "magit" nil t)
#+end_src
