#+TITLE Emacs configuration - lisp
#+PROPERTY:header-args :cache yes :tangle yes  :comments link
#+STARTUP: content
* Lisp running environments
:PROPERTIES:
:ID:       org_mark_2020-01-24T12-43-54+00-00_mini12:E97B88C8-A249-4DEC-BAE3-41153EA01D6C
:END:
These are for all () languages but could extend to more as manythings are for all structured ASTs or simply brackets
** Parentheses
:PROPERTIES:
:ID:       org_mark_2020-10-11T00-40-32+01-00_mini12.local:27461EE9-1768-4943-B3AE-65E50E8F41C7
:END:
*** Make parentheses pretty
:PROPERTIES:
:ID:       org_mark_2020-01-24T12-43-54+00-00_mini12:9CBA29B7-2EB3-42F5-80C7-C3F7507D141B
:END:
Although that should be in prog mode
	#+begin_src emacs-lisp
(use-package
  rainbow-delimiters
  :ensure t
  :delight rainbow-delimiters-mode
  :hook (prog-mode . rainbow-delimiters-mode))
	#+end_src
*** And hidden
:PROPERTIES:
:ID:       org_mark_2020-10-11T00-40-32+01-00_mini12.local:E13260FF-71E9-49D7-8F3B-C3A27D36CD65
:END:
#+NAME: org_mark_2020-10-11T00-40-32+01-00_mini12.local_066E9D01-BBA2-4788-B4FD-743EED689771
#+begin_src emacs-lisp
(use-package paren-face
  :ensure t
  :disabled
  :config
  (setq paren-face-regexp (rx (any "()[]{}")))
  (add-to-list 'paren-face-modes 'racket-mode)
  (add-to-list 'paren-face-modes 'racket-repl-mode)
  (global-paren-face-mode))
#+end_src

** Add lisp interaction mode
:PROPERTIES:
:ID:       org_mark_2020-01-24T12-43-54+00-00_mini12:A16BFB14-4F82-4EB0-B023-7A33C85B0A60
:END:
*** Lispy
:PROPERTIES:
:ID:       org_mark_2020-01-24T12-43-54+00-00_mini12:D552CE38-20B0-4316-93B7-8882FF8564E9
:END:
	 Set compat so that the keys for these modes work. But macrostep does not - see its hydra
	 #+begin_src emacs-lisp
(use-package lispy
  :ensure t
  ;;:mwb-load-path "fork/lispy"
  :bind (:map lispy-mode-map
              ("<backspace>" . lispy-delete-backward))
  :custom (lispy-eval-display-style "overlay")
  :config (setq lispy-compat '(edebug macrostep)
                lispy-safe-paste t)
  (diminish 'eldoc)
  (bind-key mwbkey-delete 'lispy-delete lispy-mode-map)
  (add-hook 'lispy-mode-hook #'turn-off-smartparens-mode))
	 #+end_src
*** Get lispy test working
:PROPERTIES:
:ID:       org_mark_2020-01-24T12-43-54+00-00_mini12:E0166176-C140-490E-97BD-236630509D5C
:END:
It assumes things like clojure
#+NAME: org_mark_2020-01-24T12-43-54+00-00_mini12_40BCC324-5430-4939-9EA3-7F0E0F4A5F4F
#+begin_src emacs-lisp
(use-package clojure-mode
  :disabled
    :ensure t)
#+end_src
*** and interaction hydra
:PROPERTIES:
:ID:       org_mark_2020-01-24T12-43-54+00-00_mini12:E63D4DBA-0F28-4311-8FC8-2D387D350185
:END:
	 Changes are now made directly to the package which is only now here
	 #+begin_src emacs-lisp
     (use-package lispy-mnemonic
       :mwb-load-path "site-lisp/lispy-mnemonic"
       :hook ((emacs-lisp-mode
               lisp-interaction-mode
               inferior-emacs-lisp-mode) . lispy-mnemonic-mode))
	 #+end_src
** Evaluation
:PROPERTIES:
:ID:       org_mark_2020-01-24T12-43-54+00-00_mini12:1A57188F-FBC8-400C-BBB4-740993B7481D
:END:
  Instead of displaying the results in a separate buffer (like the iElm does), The [[https://github.com/xiongtx/eros][EROS project]] displays the results temporarily  /in the buffer/ in an overlay.  No need to do anything special:
  However it does it by remapping the eval keys so interferes with lispy so need to sort that out. Best idea is make it one of the possible parts of lispy-mnemonic eval. lispy itself users cider to do this but I don't use Clojure. lispy now does this itself.
#+NAME: org_mark_2020-01-24T12-43-54+00-00_mini12_815540E7-FB45-497F-859D-E916895E98AC
#+BEGIN_SRC emacs-lisp
	(use-package eros
	  :ensure t
	  :commands eros--eval-overlay)
   #+END_SRC
* Lisps
:PROPERTIES:
:ID:       org_mark_2020-11-05T12-42-05+00-00_mini12.local:B524681A-4769-4945-91E7-B1FA7A9F84C6
:END:
Just make them lisp_* to run after
