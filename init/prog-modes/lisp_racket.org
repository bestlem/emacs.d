#+TITLE Emacs configuration - racket
#+PROPERTY:header-args :cache yes :tangle yes  :comments link
#+STARTUP: content
* Racket
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:1C20958B-CC40-4D69-B34D-3F34D5C8699A
:END:
Change from lispy to smartparens. The delete-selection issue is too much. I keep typing on a selected region
** Issues
:PROPERTIES:
:ID:       org_mark_mini12.local:20201221T122900.930444
:END:
*** racket-unicode-input-method-enable
:PROPERTIES:
:ID:       org_mark_mini12.local:20201221T122900.928787
:END:
Tried hook for racket-unicode-input-method-enable but this conflicks with lispy.

Got odd behaviour on completion last letter underlined and stuff in echo area, it took me a long time to see it was all greek - it was quail - used for racket-unicode-input-method-enable to allow you to enter Greek letters
*** TODO Unicode
:PROPERTIES:
:ID:       org_mark_mini12.local:20201213T235255.178814
:END:
The racket-mode version seems to invoke quail which confused me - it mightn stop company but I am not sure
Also see [[https://github.com/david-christiansen/dr-racket-like-unicode/blob/master/dr-racket-like-unicode.el][this mode]] that can do a completion - also look at abbrev
Trying company math
*** Completions
:PROPERTIES:
:ID:       org_mark_mini12.local:20201221T122900.927064
:END:
Ok I lose the :with of having yasnippet and racket mode completions but get one or the other which is acceptable. In effect yasnippet if not in a form and racket elsewhere. (Strictly racket first then if none yasnippet )
** racket mode
:PROPERTIES:
:ID:       org_mark_mini12.local:20201221T122900.924619
:END:
#+NAME: org_mark_mini12.local_20201213T220930.519021
#+begin_src emacs-lisp
(use-package racket-mode
    :ensure t
    :bind (:map racket-mode-map
                ("<f5>" . racket-test)
                ("<C-f5>" . racket-mwb-run)
                ("A-<f5>" . racket-mwb-raco-all-tests)
                ("S-<f5>" . racket-mwb-raco-test)
                ("<f1> <f1>" . racket-xp-describe)
                ("M-l" . racket-insert-lambda)
                ("M-`" . racket-insert-lambda)
                ;; ("<C-return>" . eir-eval-in-racket)
                ("<f6>" . racket-send-definition)
                ("<C-return>" . racket-mwb-send-to-repl)
                                        ;("H-A" . hydra-paredit/body)
                :map racket-repl-mode-map
                ("<f5>" . racket-run))
    :init
    (setq racket-program "/Applications/Racket v7.9/bin/racket"
          racket-images-inline t)

    ;; From   https://stackoverflow.com/questions/37571164/emacs-company-mode-completion-not-working
    (defun my-racket-mode-hook ()
      (my-all-racket-mode-hook)
      (racket-xp-mode))
    (defun my-all-racket-mode-hook ()
      (set (make-local-variable 'company-backends)
           '((company-capf
              company-math-symbols-unicode
              company-dabbrev
              company-yasnippet)))      ; each looks for its own prefix
      (company-mode 1)
      ;;(smartparens-strict-mode 1)
      ;;(racket-unicode-input-method-enable)
      (racket-mwb-smart-open-bracket-mode))

    (defun racket-mwb-send-to-repl ()
      "Send region or last sexp"
      (if (region-active-p)
          (racket-send-region)
        (racket-send-last-sexp)))
    :config
    (require 'racket-support)
    ;; (diminish 'racket-smart-open-bracket-mode)
                                        ; This is broken as it used racket internals - maybe racket itself
    ;;(require 'eval-in-repl-racket)
    ;(require 'racket-mwb-smart-open)
    :hook (racket-mode . my-racket-mode-hook)
    (racket-repl-mode . my-all-racket-mode-hook))
    #+end_src
*** racket smart open bracket
:PROPERTIES:
:ID:       org_mark_mini12.local:20210104T233820.588011
:END:
Modified to deal with lispy - lispy does not quite do it e.g. [ on a region does not leave space after (
#+NAME: org_mark_mini12.local_20210104T233820.572671
#+begin_src emacs-lisp
(use-package racket-mwb-smart-open-bracket-mode
    :after racket
    :diminish)
#+end_src
