#+TITLE Emacs configuration org Programming and structured data modes
#+PROPERTY:header-args :cache yes :tangle yes  :comments link

* ML
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:512872E0-BF29-4E7B-8851-BBE972462A28
:END:
Setup ML language family

Start with SML for coursera but this is where ocaml and f# should be

* SML
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:2FA3F9DB-2E93-49A3-8CF4-653482E10D47
:END:
sml-mode from elpa - documentation on sml/nj is old
#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_06AB4FFF-E369-48A3-BAED-2DC818FB3C7C
#+begin_src emacs-lisp
(use-package sml-mode
  :ensure t
  :bind (:map sml-mode-map
              ("<f5>" . mwb-sml-run-file))
  :hook ((sml-mode . aggressive-indent-mode)
         (sml-mode . prettify-symbols-mode)
         )
  :init                     ; remove from customise for easier control
  (setq sml-abbrev-skeletons nil
        sml-config-file "~/.config/.smlproc.sml"
        sml-electric-pipe-mode t)
  :preface
  (defun mwb-sml--kill-sml-repl ()
    "Just kill the current *sml* process.
     Taken from https://stackoverflow.com/a/19341341/151019
Which is wrong you need delete-process as quit-process won't kill if processis owned by shell
For a more singing and dancing version see https://www.reddit.com/r/ProgLangEmacs/comments/4x698w/one_command_to_kill_sml_restart_it_guess_and_load/
but on next read only the killing using comint functions seems better"
    (let ((sml-process (get-process "sml")))
      (when sml-process
        (delete-process sml-process)))
    (sleep-for 0.25)
    (let ((sml-buffer (get-buffer "*sml*")))
      (when sml-buffer
        (kill-buffer sml-buffer))))

  (defun mwb-sml-run-file (file &optional and-go)
    "Runs a file in a new sml REPL
     Note does not be clever and assumes a lot"
    (interactive
     (list (read-file-name "File to load: " nil nil t)
           current-prefix-arg))

    (save-window-excursion
      (mwb-sml--kill-sml-repl)
      (projectile-save-project-buffers))
    (sml-run sml-program-name file)))
#+end_src
*** REPL
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:135984DE-6093-4E14-AB4E-EA9D2666C799
:END:
Hmm prob OK for the code, but my tests ar a large thing not one expr + you need to send the ; separately

#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_3ADF6D5F-A5EB-4041-A8B4-17DD2B99F4F6
#+BEGIN_SRC emacs-lisp
(use-package eval-in-repl-sml
  :demand t
  :after sml-mode
  :config
  ;; Evaluate expression in the current buffer.
  :bind (:map sml-mode-map ("<f6>" . eir-eval-in-sml)
              ("H-;" . eir-send-to-sml-semicolon )))
#+END_SRC
