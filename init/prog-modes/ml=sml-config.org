#+TITLE Emacs configuration org sml config
#+PROPERTY:header-args :cache yes :tangle yes  :comments link

All this runs in the config section so not loaded until needed.
A separate file for documentation ie comments


#+NAME: org_mark_2020-02-10T11-53-11+00-00_mini12_C11A8481-74E0-4DDE-AC2E-1E4666BD903C
#+begin_src emacs-lisp
(defun mwb-sml--kill-sml-repl ()
  "Just kill the current *sml* process.
     Taken from https://stackoverflow.com/a/19341341/151019
Which is wrong you need delete-process as quit-process won't kill if processis owned by shell
For a more singing and dancing version see https://www.reddit.com/r/ProgLangEmacs/comments/4x698w/one_command_to_kill_sml_restart_it_guess_and_load/
but on next read only the killing using comint functions seems better"
  (let ((sml-process (get-process "sml")))
    (when sml-process
      (delete-process sml-process)))
  (sleep-for 0.25)
  (let ((sml-buffer (get-buffer "*sml*")))
    (when sml-buffer
      (kill-buffer sml-buffer))))
#+end_src

Run the file - the main action for sml
#+NAME: org_mark_2020-02-10T11-53-11+00-00_mini12_B8DBE76D-CEA3-4D61-9344-D0885064B7BE
#+begin_src emacs-lisp
(defun mwb-sml-run-file (file &optional and-go)
  "Runs a file in a new sml REPL
     Note does not be clever and assumes a lot"
  (interactive
   (list (read-file-name "File to load: " nil nil t)
	 current-prefix-arg))

  (save-window-excursion
    (mwb-sml--kill-sml-repl)
    (projectile-save-project-buffers))
  (sml-run sml-program-name file))
  #+end_src
Setup smartparens to allow insert of comments
 #+NAME: org_mark_2020-02-10T11-53-11+00-00_mini12_67B0138B-D586-41FE-9E48-9AA1D41C2C54
 #+begin_src emacs-lisp
(sp-with-modes '(sml-mode)
  (sp-local-pair "(*" "*)" ))
#+end_src
* REPL
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:135984DE-6093-4E14-AB4E-EA9D2666C799
:END:
Hmm prob OK for the code, but my tests ar a large thing not one expr + you need to send the ; separately

#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_3ADF6D5F-A5EB-4041-A8B4-17DD2B99F4F6
#+BEGIN_SRC emacs-lisp
(use-package eval-in-repl-sml
  :demand t
  :config
  ;; Evaluate expression in the current buffer.
  :bind (:map sml-mode-map ("<f6>" . eir-eval-in-sml)
	      ("H-;" . eir-send-to-sml-semicolon )))
#+END_SRC
