#+TITLE Emacs configuration org python configuration
#+PROPERTY:header-args :cache yes :tangle yes  :comments link

This is a minimal setup as not doing any real work.

Look at howardabrams for a more detailed setup.
Can't choose between elpy and jedi etc.

Now I used python's python mode not the one in emacs. The latter has been improved and so perhaps I could change

The problem is conda uses pythonic which has a require 'python and so always loads the emacs one.
And xonsh mode uses python.el as well

So it is a mess

When really use python then start from elpy or similar. - well maybe not

* Python mode
:PROPERTIES:
:ID:       org_mark_2020-11-24T21-22-09+00-00_mini12.local:F61D3DCD-D95F-45D0-8D2C-DC2C01096167
:END:
Full dancing one from python
#+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_26CAE374-0A00-4CBD-A31D-D465AE7AD800
#+begin_src emacs-lisp
(use-package python-mode
  :ensure t
  :disabled
  ;;  add as multiple python-modes so need to force a bit
  :mode ("\\.py\\'" . python-mode)
  :interpreter ("python" . python-mode)
  :bind (:map python-mode-map
			  ("C-c c")
			  ("C-c C-z" . python-shell))
  :init
  (setq py--imenu-create-index-p t)
  :config

  (setq-default python-indent 4)
  (setq-default python-indent-offset 4)
  (add-hook 'python-mode-hook           ;why it is OK elsewhere
            (lambda ()
              (setq tab-width 4)))
  (setq-default pdb-command-name "python3 -m pdb")
  (setq-default python-shell-interpreter "python3")
  )
#+end_src

* Python.el
:PROPERTIES:
:ID:       org_mark_2020-11-24T21-22-09+00-00_mini12.local:5313A1ED-609C-49B1-9C6B-C6A1279D4873
:END:
One in emacs and has things built on it
#+NAME: org_mark_2020-11-24T21-22-09+00-00_mini12.local_D8E951D0-C15C-4B10-AAC8-8DAF8382B214
#+begin_src emacs-lisp
(use-package python
  :mode
  ("\\.py\\'" . python-mode)
  ("\\.wsgi$" . python-mode)

  :interpreter ("python" . python-mode)

  :bind ("<f5>" . python-shell-send-buffer)
  :init
  (setq-default indent-tabs-mode nil)


  (defun python-hook-mwb ()
    (setq tab-width 4)
    (aggressive-indent-mode -1))
  :config
  (setq python-indent-offset 4)
  (setq python-indent-guess-indent-offset nil)
  (add-hook 'python-mode-hook 'smartparens-mode)
  ;; (add-hook 'python-mode-hook 'color-identifiers-mode)
  (add-hook 'python-mode-hook 'python-hook-mwb)
  (add-hook 'python-mode-hook 'mwb-prog-auto-fill-80))
#+end_src
** Conda
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:4BA83964-C235-4AA4-8490-70CCC9C25C6D
:END:
Might be better in elpy etc as for the pythonic issue.
  #+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_D22A3A48-A2D2-493C-B891-0645341FE000
  #+begin_src emacs-lisp
(use-package conda
  :mwb-load-path "fork/conda.el"
  :after (python)
  :init
  (setq conda-anaconda-home "~/miniconda3/")

  :config


  ;; If you want interactive shell support, include:

  ;; MWB well no as it messes up xonsh
  ;; (conda-env-initialize-interactive-shells)

  ;; If you want eshell support, include:
                                        ;(conda-env-initialize-eshell)

  ;; In effect no as dirs are not a 1-1 match for envs
  ;; If you want auto-activation, include:
  ;; (conda-env-autoactivate-mode t)

  ;; Activate the project/virtual env you want to use.
  ;; Via M-x conda-env-activate RET analyticd-pysystemtrade
  ;; or
  ;; (conda-env-activate "analyticd-pysystemtrade")
  ;; (conda-env-activate "base")

  ;; we need a setup - e.g. code-snippets
  (conda-env-activate (if (equalp (file-name-nondirectory explicit-shell-file-name)
                                  "xonsh")
                          "xonsh"
                        "base"))
  (setq-default mode-line-format (cons mode-line-format '(:exec conda-env-current-name))))
  #+end_src
** TODO Org mode
:PROPERTIES:
:ID:       org_mark_2020-11-11T11-24-14+00-00_mini12.local:9705EACE-A73F-41E3-A5AB-8FD2BAB849B5
:END:
Need to set up execute (here or at start)
** Xonsh
:PROPERTIES:
:ID:       org_mark_2020-01-24T17-28-10+00-00_mini12:62195329-D8AA-4CC1-B7F4-4570BBDCF3A8
:END:
There is now a xonsh mode
  #+NAME: org_mark_2020-01-24T17-28-10+00-00_mini12_59880E6F-AD42-47DF-B04B-957600115D5D
  #+begin_src emacs-lisp
(use-package xonsh-mode
  :ensure t
  :mode
  "\\.xsh\\'")
  #+end_src
