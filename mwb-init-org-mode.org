#+TITLE Emacs configuration org Mode
#+PROPERTY:header-args :cache yes :tangle (concat "init/" (file-name-base  (buffer-file-name)) ".el") :comments link

#+STARTUP: content
* Start using org mode
This is my first attempt at learning it.
The config is a mess as I pick up on things.
I was going to leave this to last so could make changes as I used org. However as I kept editing it I realised that I needed to comment and than was better in literate programming so this is the first non key file to be done.
This is a large config and might be easier to document if not all put in a use-package (or break my rule and let some parts not be complete lisp)
** use package issues
This config gets long so difficult to see in one block
Currently I put things outside use-package
* Loading
org-mode is a pain as we need a newer than aquamacs supplies and also there are recommendations to use an even later version. Also re packaging emacs package.el reads already built stuff others e.g. straight.el don't and that could be a problem with org-mode. There are reasons not to use the org repo but Elpa - [[https://www.reddit.com/r/emacs/comments/5sx7j0/how_do_i_get_usepackage_to_ignore_the_bundled/ddix2ta/?utm_source=share&utm_medium=web2x][from Reddit]] basically possible security issues so I am with ELPA and missing org-contrib.
** Force load of new version
[[https://github.com/jwiegley/use-package/issues/319#issuecomment-471274348][mzuther  fix]] to load via package
 #+begin_src emacs-lisp
(assq-delete-all 'org package--builtins)
 #+end_src
** The use package setup
 #+begin_src emacs-lisp
 (use-package
   org
   :ensure t
   :hydra (hydra-org-mode
		   (:color teal)
		   ""
		   ("c" mwb-hydra-org-code/body "Code")
		   ("d" org-toggle-link-display "Show links")
		   ("l" org-insert-link "link")
		   ("g" org-set-tags-command "tags")
		   ("t" org-todo "todo")
		   ("q" nil "cancel"))
   :after hydra
   :bind (:map org-mode-map
			   ("H-a" . hydra-org-mode/body)
			   ("H-s" . org-edit-special)
			   :map org-src-mode-map
			   ("H-s" . org-edit-src-exit)
			   ("A-s" . org-edit-src-exit) ; I press by mistake but it makes sense
			   )
   :hook  (org-mode . (lambda ()
						(add-hook 'after-save-hook 'org-babel-tangle 'run-at-end 'only-in-org-mode)))
   )
 #+end_src
** Setup outside use-package
*** Imenu to provide info for treemacs and contextual menu
  #+begin_src emacs-lisp
  (add-hook 'org-mode-hook
			(lambda () (imenu-add-to-menubar "Imenu")))
  (setq org-imenu-depth 6)
  #+end_src
** Babel initialisation
Code block behaviour - but also see customization for appearance
 #+begin_src emacs-lisp
 (setq org-src-fontify-natively t
	   org-src-tab-acts-natively t
	   org-confirm-babel-evaluate nil
	   org-edit-src-content-indentation 0)
 #+end_src
** Pretify
Make org mode look prettier. See also the customization
 #+begin_src emacs-lisp
 (use-package org-bullets
   :ensure t
   :init (add-hook 'org-mode-hook 'org-bullets-mode))
 #+end_src
** Hydras for tangling
 #+begin_src emacs-lisp
 (defhydra mwb-hydra-org-code
   (:color teal)
   ""
   ("e" org-edit-special "Edit the code") ; Now H-s
   ("t" org-babel-tangle "Tangle buffer")
   ("q" nil "cancel"))

 #+end_src
